# tasks file for kibatic.traefik
---
- name: Create traefik systemd unit
  template:
    src: "{{ traefik_systemd_unit_template }}.j2"
    dest: "{{ traefik_systemd_unit_dest }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart traefik

- name: Ensure install & config directory exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ traefik_install_dir }}"

- name: Copy traefik config file
  template:
    src: "{{ traefik_template }}.j2"
    dest: "{{ traefik_config_file }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart traefik

- name: Ensure traefik service is stopped before traefik update
  service:
    name: traefik
    state: stopped
    enabled: yes
  when: traefik_update | bool == True

- name: "Decide whether to unarchive the artifact and override binary"
  set_fact:
    unarchive_artifact: "{{ traefik_binary_url is search('.tar.gz') }}"
    tar_flags: "{{ traefik_update | bool | ternary('traefik', '--skip-old-files traefik') }}"

- name: Download Traefik binary
  get_url:
    url: "{{ traefik_binary_url }}"
    dest: "{{ traefik_bin_path }}"
    owner: root
    group: root
    mode: 0755
    force: "{{ traefik_update | bool }}"
  when: not unarchive_artifact

- name: Download Traefik binary and unarchive it
  unarchive:
    src: "{{ traefik_binary_url }}"
    remote_src: yes
    dest: "{{ traefik_install_dir }}"
    owner: root
    group: root
    mode: 0755
    extra_opts: tar_flags # Only extract binary
  when: unarchive_artifact

- name: Ensure traefik service is enabled and running
  systemd:
    name: traefik
    state: started
    enabled: yes
    daemon_reload: yes
